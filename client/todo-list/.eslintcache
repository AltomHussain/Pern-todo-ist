[{"C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\index.js":"1","C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\App.js":"2","C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\component\\InputTodo.js":"3","C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\component\\DisplayTodo.js":"4","C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\component\\EditTodo.js":"5"},{"size":367,"mtime":1609949498682,"results":"6","hashOfConfig":"7"},{"size":327,"mtime":1610029347858,"results":"8","hashOfConfig":"7"},{"size":1205,"mtime":1610029347866,"results":"9","hashOfConfig":"7"},{"size":1806,"mtime":1610029347862,"results":"10","hashOfConfig":"7"},{"size":2050,"mtime":1610029347866,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vtjgwx",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\index.js",[],"C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\App.js",[],"C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\component\\InputTodo.js",[],["24","25"],"C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\component\\DisplayTodo.js",[],"C:\\Users\\wlinkdell\\Desktop\\Pern todo\\client\\todo-list\\src\\component\\EditTodo.js",["26"],"import React, { Fragment, useState } from \"react\";\r\n\r\nexport default function EditTodo({todo}) {\r\n    const [description, setDescription] = useState(todo.description)\r\n    \r\n    const editText = async(id)=>{\r\n        try {\r\n            const body = {description}\r\n            const res = await fetch(`http://localhost:5000/todo/${id}`, {\r\n                method: \"PUT\",\r\n                headers: {\"Content-type\": \"application/json\"},\r\n                body: JSON.stringify(body)\r\n            })\r\n            window.location = \"/\"\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n    \r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${todo.todo_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      <div class=\"modal\" id={`id${todo.todo_id}`} onClick={()=>setDescription(todo.description)}>\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h4 class=\"modal-title\">Edit Todo</h4>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick={()=>setDescription(todo.description)}>\r\n                &times; \r\n              </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n              <input type=\"text\" className=\"form-control\" value={description} onChange={(e)=>setDescription(e.target.value)}/>\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                onClick={()=> editText(todo.todo_id)}\r\n                >\r\n                Edit\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" onClick={()=>setDescription(todo.description)}>\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":9,"column":19,"nodeType":"33","messageId":"34","endLine":9,"endColumn":22},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]